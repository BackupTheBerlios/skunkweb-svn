#!@PYTHON@
#  
#  Copyright (C) 2001 Andrew T. Csillag <drew_csillag@geocities.com>
#  
#      You may distribute under the terms of either the GNU General
#      Public License or the SkunkWeb License, as specified in the
#      README file.
#   
"""
This utility allows one to look at the source file of a compiled template. 
Useful for debugging purposes
"""

import marshal
import cPickle
import sys
import tempfile
import os
import string

if len(sys.argv) != 2:
    print ( 'Usage: %s <cached_template>' % sys.argv[0] )
    sys.exit(1)

f = open ( sys.argv[1] )
data = f.read()
f.close()

try:
    (path, text, compiled, meta), version = marshal.loads(data)
except (EOFError, ValueError, TypeError):
    print ( 'File %s doesn\'t appear to contain a compiled template' % sys.argv[1] )
    sys.exit(1)

# Get the text 
#path, text, compiled, meta = marshal.loads ( data )

fname = tempfile.mktemp()
f = open ( fname, 'w' )
f.write ( text )
f.close()

editor = os.environ.get('EDITOR', 'vi')

os.system ( '%s %s' % (editor, fname) )

# Put the data back into cache
sys.stdout.write ( 'Put the edited file in the compiled representation? [y/N] ')
sys.stdout.flush()
ans = string.strip(sys.stdin.readline())
try:
    if ans in ('y', 'Y'):
        new_src = open(fname).read()
        text = new_src
        compiled = compile ( text, path, 'exec' )
        f = open ( sys.argv[1], 'w' )
        marshal.dump(((path, text, compiled, meta), version), f)
        f.close()

        print 'Stored'
finally:
    os.unlink ( fname )
