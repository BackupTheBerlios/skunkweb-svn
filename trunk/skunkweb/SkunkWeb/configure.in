dnl  
dnl  Copyright (C) 2001 Andrew T. Csillag <drew_csillag@geocities.com>
dnl  
dnl	 You may distribute under the terms of either the GNU General
dnl	 Public License or the SkunkWeb License, as specified in the
dnl	 README file.
dnl   
AC_INIT(mod_skunkweb/mod_skunkweb.c)

AC_SUBST(SW_VERSION)
SW_VERSION=3.4b2

AC_PREFIX_DEFAULT(/usr/local/skunk)

# Check for location of bash. Don't check the return status, lower level
# config should have taken care of that
AC_SUBST(BASH)
AC_PATH_PROG(BASH,bash)

# Get the python path
AC_SUBST(PYTHON)
# look for python
AC_MSG_CHECKING([--with-python given])
AC_ARG_WITH(python,
[  --with-python=/path/python   Specify path to python executable],[
	AC_MSG_RESULT([yes $withval])
	PYTHON=$withval],[
	AC_MSG_RESULT([no, will look in \$PATH])
	PYTHON=])

if test -z "$PYTHON"
then
# Check for python in path
AC_PATH_PROG(PYTHON,python)
fi

AC_SUBST(DOCROOT)
AC_ARG_WITH(docroot,
[ --docroot     Specify default docroot location (default <SkunkRoot>/docroot)], [
DOCROOT=$withval], [
DOCROOT=\${prefix}/docroot])

AC_SUBST(LOGDIR)
AC_ARG_WITH(logdir,
[ --logdir   Specify default directory for log files (default <SkunkRoot>/var/log)], [
LOGDIR=$withval], [
LOGDIR=\${localstatedir}/log])

AC_SUBST(CACHE)
AC_ARG_WITH(cache,
[ --cache     Specify default cache location (default <SkunkRoot>/cache)], [
CACHE=$withval], [
CACHE=\${prefix}/cache])

AC_SUBST(OWNER)
AC_ARG_WITH(user, 
[  --with-user=user        Make Skunk installation owned by user], [
	OWNER=$withval], [
	OWNER=`$PYTHON -c "import pwd,os; print pwd.getpwuid(os.getuid())[[0]]"`;])
dnl	OWNER=`python -c "import pwd,os; print pwd.getpwuid(os.getuid())[[0]]"`;])

AC_SUBST(GROUP)
AC_ARG_WITH(group, 
[  --with-group=group      Make Skunk installation owned by group], [
	GROUP=$withval], [
	GROUP=`$PYTHON -c "import grp,os; print grp.getgrgid(os.getgid())[[0]]"`;])
dnl	GROUP=`python -c "import grp,os; print grp.getgrgid(os.getgid())[[0]]"`;])

AC_SUBST(RUNASROOT)
AC_ARG_WITH(runasroot,
[  --with-runasroot        If you want to have SkunkWeb bind to low ports, add
                          this switch and set the userToRunAs and groupToRunAs
                          sw.conf configuration options], [
	RUNASROOT=root], [
	RUNASROOT=$OWNER])

AC_SUBST(WEBDOC)
AC_ARG_WITH(webdoc, 
[  --with-webdoc           Install some sample content], [
	case $withval in
	no) WEBDOC="no";;
	yes) WEBDOC="yes";;
	*) WEBDOC="yes";;
	esac], [
	WEBDOC="no";])

AC_SUBST(SERVICES)
SERVICES="ae_component aecgi auth basicauth extcgi fcgiprot httpd mysql oracle postgresql product psptemplate pycgi pypgsqlcache remote remote_client requestHandler rewrite scgi sessionHandler templating userdir usertracking web"

dnl Checks for programs.
AC_PROG_CC
AC_PROG_MAKE_SET
AC_PROG_RANLIB
AC_PROG_INSTALL

AC_MSG_CHECKING([--with-sudo given])
AC_ARG_WITH(sudo,
[  --with-sudo=/path/sudo  Specify path to sudo],[
	AC_MSG_RESULT([yes $withval])
	SUDO=$withval],[
	AC_MSG_RESULT([no, will look in \$PATH])
	SUDO=])
if test -z "$SUDO"
then
# Check if sudo exists
AC_PATH_PROG(SUDO, sudo, "", "$PATH:/usr/sbin:/sbin")
fi


# check if they want to build/install mod_skunkweb
AC_MSG_CHECKING([build mod_skunkweb])
AC_SUBST(MOD_SKUNKWEB)
AC_ARG_WITH(mod_skunkweb,
[  --without-mod_skunkweb  Don't build mod_skunkweb],[
	case $withval in
	no)  MOD_SKUNKWEB="";            MOD_SKUNKWEBRES="no";;
	yes) MOD_SKUNKWEB="mod_skunkweb";   MOD_SKUNKWEBRES="yes";;
	*)   MOD_SKUNKWEB="mod_skunkweb";   MOD_SKUNKWEBRES="yes";;
	esac], [
	MOD_SKUNKWEB="mod_skunkweb";        MOD_SKUNKWEBRES="yes";])
AC_MSG_RESULT([$MOD_SKUNKWEBRES])

if test -n "$MOD_SKUNKWEB"  #if not building mod_skunkweb, don't worry about apache
then

AC_MSG_CHECKING([--with-apxs given])
AC_ARG_WITH(apxs, 
[  --with-apxs=/path/apxs  Specify path to the apxs program],[
	AC_MSG_RESULT([yes $withval])
	APXS=$withval],[
	AC_MSG_RESULT([no, will look in \$PATH])
	APXS=])

# --with-apxs not supplied, try to find in PATH
if test -z "$APXS"
then
dnl Locate apache axps, needed to compile mod_aecgi
AC_PATH_PROG(APXS, apxs, "notfound", "$PATH:/usr/local/apache/bin")

if [[ "$APXS" = "notfound" ]]
then
    AC_MSG_ERROR([apxs not found! Make sure Apache is installed])
fi
fi

# Now, check that apache is compiled with shared modules enabled
AC_MSG_CHECKING([apache shared module support])
if $APXS -q CC >/dev/null 2>&1
then
    AC_MSG_RESULT(ok)
else
    AC_MSG_ERROR([Apache does not appear to be compiled with shared module support])
    exit 1
fi

# Check the the apxs contains the absolute library path. Some RPMs for 
# RedHat / Mandrake have broken apxs
AC_MSG_CHECKING([apache modules directory])
if test -d `$APXS -q LIBEXECDIR`
then
    AC_MSG_RESULT([OK])
else
    AC_MSG_ERROR([Apache appears to be misconfigured - apxs reports module directory as `$APXS -q LIBEXECDIR`. Absolute path expected])
    exit 1
fi

# Set the modules dir for substitution
AC_SUBST(APACHE_MODULES_DIR)
APACHE_MODULES_DIR=`$APXS -q LIBEXECDIR`

fi #if mod_skunkweb enabled

dnl Check for functions
dnl memmem() is used by mod_skunkweb
AC_CHECK_FUNCS(memmem)

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(limits.h unistd.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_SIZE_T

dnl Checks for library functions.

test "x$prefix" = xNONE && prefix=$ac_default_prefix
test "x$exec_prefix" = xNONE && exec_prefix=$prefix

eval libdir=$libdir
eval bindir=$bindir
eval sysconfdir=$sysconfdir
eval localstatedir=$localstatedir
eval datadir=$datadir
eval LOGDIR=$LOGDIR
eval DOCROOT=$DOCROOT
eval CACHE=$CACHE

AC_OUTPUT(Makefile sw.conf mod_skunkweb/Makefile mod_skunkweb/httpd_conf.stub
Services/Makefile skunkweb.py swpython.py swmgr util/cache_reaper.py SkunkWeb/confvars.py
util/vicache.py SkunkWeb/bootloader.py Services/basicauth/swpasswd.py 
Services/product/productwiz swcgi.py swpython.c)
