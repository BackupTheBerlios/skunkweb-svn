from formlibtest.testDispatch3 import *
from formlib import *
from formlib.form import UNDEF
import rotor
import pprint
import ecs

def process_munge(form, state, argdict, formdict, ns):
    """
    this should take the form  data populate
    the previous form on the stack with the item
    indicated in the hidden variable "_mungefield"
    into the field called "_mungetarget".
    
    """
    fname=state.peek_formname()
    f=formdict[fname]
    target=argdict.get('_mungetarget')
    source=argdict.get('_mungeitem')
    if target and source:
        print "target: %s; source: %s" % (target, source)
        state.state.setdefault(fname, {})
        state.state[fname][target]=form.fields[source].value
        
def process_submit(form, state, argdict, formdict, ns):
    """
    """
    pass

forms=[ViewableForm('page1',
                    method="POST",
                    fields=[HiddenField(stateVar),
                            TextField('item', 'Item', required="please specify an item"),
                             ButtonField(name=flowactionVar,
                                         content='Find Item...',
                                         default='PUSH.finditem',
                                         setable=0,
                                         type="submit"),
                            SubmitField('_submit',
                                        default='Submit')]),
       ViewableForm('finditem',
                    method="POST",
                    fields=[HiddenField(stateVar),
                            ButtonGroupField('item',
                                             description='Select Item',
                                             options=['fruitcake',
                                                      'bazooka',
                                                      'Stradivarius',
                                                      'handcuffs',
                                                      'primrose',
                                                      'gloves'],
                                             multiple=0,
                                             required="You must select an item, or forever burn in Hell."),
                            HiddenField(flowactionVar, default="POP"),
                            HiddenField('_mungeitem', default='item'),
                            HiddenField('_mungetarget', default='item'),
                            SubmitField('_submit', default="submit")], 
                    processors=[process_munge]),
       ViewableForm('confirm',
                    method="POST",
                    fields=[HiddenField(stateVar),
                            ButtonGroupField('confirm',
                                             description='Are you sure you want to dizmanzansify this item?',
                                             options=[('1', 'Yes, dismanzansify it!'),
                                                      ('0', 'No, send me to the beginning')],
                                             multiple=0,
                                             required='Please say what you want to do.',
                                             default='0'), 
                            SubmitField('_submit', default='Take the Plunge')],  
                    processors=[process_submit])]

statemgr=InPageStateManager('don\'t touch my nougat',
                            rotor.newrotor('time for dinner'))
            
dispatcher=FormDispatcher(statemgr,
                          forms,
                          flowmgr=PushyFlowManager(forms),
                          stateVariable=stateVar)



curform=dispatcher.dispatch(CONNECTION.args, globals())
state=dispatcher.statemgr.state
##print ecs.H5('state:')
##print ecs.Pre(pprint.pformat(state))
##print ecs.Pre(pprint.pformat(dispatcher.statemgr.stack))
##print ecs.Pre(CONNECTION.args)

if curform:
    print
    print curform.getView()
    print
else:
    print '<h2>congratulations, you are done.</h2>'

